import { type LDContext, type LDEvaluationDetail } from 'launchdarkly-js-client-sdk';
import { BrowserTelemetry } from '../../api/BrowserTelemetry';
import { Collector } from '../../api/Collector';
import { SessionReplayOptions } from './SessionReplayOptions';
/**
 * Experimental capture of sessions using rrweb.
 */
export default class SessionReplay implements Collector {
    impl: Collector;
    constructor(options?: SessionReplayOptions);
    register(telemetry: BrowserTelemetry, sessionId: string): void;
    unregister(): void;
    handleFlagUsed?(flagKey: string, flagDetail: LDEvaluationDetail, _context: LDContext): void;
    handleFlagDetailChanged?(flagKey: string, detail: LDEvaluationDetail): void;
    handleErrorEvent(name: string, message: string): void;
}
//# sourceMappingURL=SessionReplay.d.ts.map