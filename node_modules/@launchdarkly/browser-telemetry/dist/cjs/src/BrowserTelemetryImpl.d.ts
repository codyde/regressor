import type { LDClient, LDContext, LDEvaluationDetail, LDInspection } from 'launchdarkly-js-client-sdk';
import { Breadcrumb } from './api/Breadcrumb';
import { BrowserTelemetry } from './api/BrowserTelemetry';
import { EventData } from './api/EventData';
import { ParsedOptions } from './options';
export default class BrowserTelemetryImpl implements BrowserTelemetry {
    private options;
    private maxPendingEvents;
    private maxBreadcrumbs;
    private pendingEvents;
    private client?;
    private breadcrumbs;
    private inspectorInstances;
    private collectors;
    private sessionId;
    constructor(options: ParsedOptions);
    register(client: LDClient): void;
    inspectors(): LDInspection[];
    private capture;
    captureError(exception: Error): void;
    captureErrorEvent(errorEvent: ErrorEvent): void;
    captureSession(sessionEvent: EventData): void;
    addBreadcrumb(breadcrumb: Breadcrumb): void;
    close(): void;
    handleFlagUsed(flagKey: string, detail: LDEvaluationDetail, context: LDContext): void;
    handleFlagDetailChanged(flagKey: string, detail: LDEvaluationDetail): void;
    private dispatchError;
    private dispatchFlagUsed;
    private dispatchFlagDetailChanged;
}
//# sourceMappingURL=BrowserTelemetryImpl.d.ts.map